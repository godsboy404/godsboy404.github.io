import{_ as e,c as o,G as d,b as c}from"./chunks/framework.BrC0DRXd.js";const l=JSON.parse('{"title":"Vim 备忘","description":"vim 快捷键。","frontmatter":{"title":"Vim 备忘","filename":240222,"tags":["备份"],"date":"2024-02-22T00:00:00.000Z","description":"vim 快捷键。","top":false,"share":true,"delete":false,"head":[["link",{"rel":"canonical","href":"https://coderama.top/posts/2024/240222"}]]},"headers":[],"relativePath":"posts/2024/240222.md","filePath":"posts/2024/240222.md","lastUpdated":1758531854000}');const i=e({name:"posts/2024/240222.md"},[["render",function(e,l,i,p,a,t){return c(),o("div",null,l[0]||(l[0]=[d('<h2 id="基础部分" tabindex="-1">基础部分 <a class="header-anchor" href="#基础部分" aria-label="Permalink to &quot;基础部分&quot;">​</a></h2><p><code>h</code> 左 <code>j</code> 下 <code>k</code> 上 <code>l</code> 右</p><p><code>yy</code> 复制当前行</p><p><code>p</code> 粘贴</p><p><code>f;</code> 跳转到字符 <code>;</code> 处，这里其实就是相当于行位。</p><p><code>h</code> 向左移动一个光标</p><p><code>ciw</code> 删除当前处的词，并进入 <code>插入模式</code></p><p><code>V</code> 进入内容选择模式</p><p><code>d</code> 删除选中部分</p><p><code>di&quot;</code> 删除<code>&quot;</code> 内的内容，个人感觉这个还是非常常用了。也是初步在效率上优于传统的 intellj idea 的操作方式。如果想要删除之后马上进入插入模式 可以使用 <code>ci&quot;</code></p><ul><li><code>di(</code> <code>di{</code> 同理。</li></ul><p><code>i</code> 在光标之前，进入插入模式</p><p><code>I</code> 在本行开头，进入插入模式</p><p><code>a</code> 在光标之后，进入插入模式</p><p><code>A</code> 在本行结尾，进入插入模式</p><p><code>o</code> 在本行之后新增一行，并进入插入模式</p><p><code>O</code> 在本行之前新增一行，并进入插入模式</p><p><code>s</code> 删除当前字符，并进入插入模式</p><p><code>S</code> 删除当前行中的所有文本，并进入插入模式</p><h2 id="高阶指导" tabindex="-1">高阶指导 <a class="header-anchor" href="#高阶指导" aria-label="Permalink to &quot;高阶指导&quot;">​</a></h2><p><code>[n]f{word}</code></p><ul><li><code>f</code> 用来查找在当前行 当前光标后是否存在某个字符 <code>{word}</code> 如果存在则将光标移动过去。</li><li>如果将这里的 <code>f</code> 改为 <code>F</code> 则是反向查找</li></ul><p><code>$ and ^</code></p><ul><li><code>$</code> 跳转到行尾</li><li><code>^</code> 跳转到行首</li></ul><p><code>%</code> 括号匹配跳转 <code>() [] {}</code></p><p><code>*</code> 跳转到上一个字符的定位处</p><p><code>[n]h/j/k/l</code> 数字加上方向键 代表重复运行多少次:</p><ul><li><code>2jj</code> 向下移动两行</li><li><code>10l</code> 向右移动 10 个字符</li><li><code>3kk</code> 向上移动 3 行</li><li><code>20h</code> 向左移动 20 字符</li></ul><p><code>G and gg</code></p><ul><li><code>G</code> 移动到最后一行</li><li><code>gg</code> 移动到第一行</li></ul><p><code>H and M and L</code></p><ul><li><code>H</code> 移动到当前页的第一行</li><li><code>M</code> 移动到编辑器中部</li><li><code>L</code> 移动到当前页的最后一行</li><li><code>[n]w</code> 移动到后面 <code>word</code> 的开始位置，前面加上数字 代表重复多少次</li><li><code>e</code> 移动到下一个词语的末尾</li><li><code>b</code> 移动到上一个单词的开头</li><li><code>zz</code> 改变窗口的整体位置，将当前光标所在处 移动到窗口中部</li></ul><h3 id="其他的比较好用的命令" tabindex="-1">其他的比较好用的命令 <a class="header-anchor" href="#其他的比较好用的命令" aria-label="Permalink to &quot;其他的比较好用的命令&quot;">​</a></h3><p><code>zo | zc</code></p><p><code>dt{char}</code></p>',35)]))}]]);export{l as __pageData,i as default};
